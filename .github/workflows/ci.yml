name: CI

on:
  push:
    branches: [main]

env:
  PYTHON_VERSION: "3.11"

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      #----------------------------------------------
      #       check-out repo and set-up python
      #----------------------------------------------
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up python
        uses: actions/setup-python@v4
        with:
          python-version: "${{ env.PYTHON_VERSION }}"
      #----------------------------------------------
      #       run pre-commit checks
      #----------------------------------------------
      - uses: pre-commit/action@v3.0.0

  build-frontend:
    needs: [pre-commit]
    runs-on: ubuntu-latest
    steps:
      #----------------------------------------------
      #       check-out repo and set-up node
      #----------------------------------------------
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json
      - name: Install dependencies
        working-directory: frontend
        run: npm install
      #----------------------------------------------
      #       build frontend and cache artifacts
      #----------------------------------------------
      - name: Build frontend
        working-directory: frontend
        run: npm run build
      - name: Upload frontend artifacts
        uses: actions/upload-artifact@v3
        with:
          name: frontend-artifacts
          path: |
            src/frontend

  test:
    needs: [build-frontend]
    runs-on: ubuntu-latest
    steps:
      #----------------------------------------------
      #       check-out repo and set-up python
      #----------------------------------------------
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: "${{ env.PYTHON_VERSION }}"
      #----------------------------------------------
      #        download frontend artifacts
      #----------------------------------------------
      - name: Download frontend artifacts
        uses: actions/download-artifact@v3
        with:
          name: frontend-artifacts
          path: |
            src/frontend
      #----------------------------------------------
      #  -----  install & configure poetry  -----
      #----------------------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      #----------------------------------------------
      #       load cached venv if cache exists
      #----------------------------------------------
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      #----------------------------------------------
      # install dependencies if cache does not exist
      #----------------------------------------------
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root --without code-qa
      #----------------------------------------------
      #              run test suite
      #----------------------------------------------
      - name: Run tests
        run: |
          source .venv/bin/activate
          pytest
